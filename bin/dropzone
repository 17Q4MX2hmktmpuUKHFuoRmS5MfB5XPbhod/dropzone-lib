#!/usr/bin/env node
var cache = require('../src/cache')


var configure = exports.configure = function (commander, defaults) {
  defaults = defaults || {}
  var options = {
    socks: 0,
    driver: 'spv',
    network: 'livenet',
    fee: 2000
  }
  var current = {}
  for (var opt in options) {
    defaults[opt] = defaults[opt] || options[opt]
    current[opt] = '(' + defaults[opt] + ')'
  }
  return commander 
    .option('-s, --socks <server:port>',
      'Route all connections through the specified socks server & port ' + current.socks,
      defaults.socks)
    .option('-r, --driver <name>',
      'Connect to the blockchain using any of these drivers [spv] ' + current.driver,
      defaults.driver)
    .option('-n, --network <name>',
      'Force usage of specific bitcoin network [livenet, testnet] ' + current.network,
      defaults.network)
    .option('-f, --fee <satoshis>',
      'Set the transaction fee amount ' + current.fee,
      defaults.fee)
}

if (!module.parent) {
  var program = require('commander')

  program
    .version(require('../package').version)
    .description('Dropzone: A marketplace built on the Blockchain.')
    .usage('<command> [options]')
    .command('balance', 'Display the balance on the provided address')
    .command('pay', 'Send value to a recipient')
    .command('chat <command>',
      'Manage chats between you and another party')
    .command('listing <command>', 'Manage product listings')
    .command('profile <command>', 'Manage buyer and seller profiles')
    .command('review <command>', 'Manage sales reviews')
    .command('invoice <command>', 'Manage invoices')
    
  cache.ready(function() {
    program.parse(process.argv)
  })
}
