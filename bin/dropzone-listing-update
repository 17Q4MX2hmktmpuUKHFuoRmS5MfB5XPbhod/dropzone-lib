#!/usr/bin/env node
var program = require('commander')
var tab = new Array(32).join(' ')

program
  .usage('<private_key> <tx_id> [options]')
  .description('Update your item listing')
  .option('-s, --description <text>',
    "A detailed description of the item that's being listed. Hashtags\n" +
    tab + 'are encouraged as they will be easily searched and indexed, and\n' +
    tab + 'take up a small amount of space')
  .option('-c, --currency <code>',
    'A three or four digit currency identifier. Common values would\n' +
    tab + "include 'BTC' or 'USD', though any identifier can be specified")
  .option('-p, --price <amount>',
    'The price of the specified item denominated in cents, or satoshis, etc',
    parseInt)
  .option('-e, --expires_in <num_blocks>',
    'The expiration time of the item. "Times" are to be indicated in the\n' +
    tab + 'number of blocks this listing is available for. Omitting this\n' +
    tab + 'field indicates no expiration. Note that clients will likely\n' +
    tab + "override the seller's preference to list an item for a very\n" +
    tab + "long time by restricting the block depth of users' searches")
  .option('-s, --socks <server:port>',
    'Route all connections through the specified socks server & port')
  .option('-r, --driver <name>',
    'Connect to the blockchain using any of these drivers [spv]', 'spv')
  .option('-t, --testnet',
    'Force transactions that would normally be on mainnet, onto testnet')
  .option('-f, --fee <satoshis>',
    'Set the transaction fee amount (default: 2000)', 2000)
  .on('--help', function () {
    console.log(
      '  Given the provided item transaction id <txid> on your\n' +
      '  account <private_key>, update the specified item attributes.\n' +
      '  Note that some attributes such as latitude, longitude, and radius' +
      '  cannot be updated.\n')
    console.log(
      '  Example:\n\n' +
      '  # Update an item\n' +
      '  dropzone listing update \\\n' +
      '    92thgQGx77ihBaA56W7B1Qm8nhYHRERo1UqrgT2p6P6QTqkRhRB \\\n' +
      '    0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098 \\\n' +
      "    --description 'Second description'\n")
  })

program.parse(process.argv)
