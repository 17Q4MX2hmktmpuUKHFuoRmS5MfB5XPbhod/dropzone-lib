#!/usr/bin/env node
var program = require('commander')
var command = require('../src/commands').chat.create

program
  .usage('<private_key> <addr> [options]')
  .description('Start a new conversation with the owner of a testnet address')
  .option('-s, --socks <server:port>',
    'Route all connections through the specified socks server & port')
  .option('-r, --driver <name>',
    'Connect to the blockchain using any of these drivers [spv]', 'spv')
  .option('-m, --mainnet',
    'Force sessions that would normally be on testnet, onto mainnet')
  .option('-f, --fee <satoshis>',
    'Set the transaction fee amount (default: 2000)', 2000)
  .on('--help', function () {
    console.log(
      '  Start a conversation between your tesnet <private_key> and\n' +
      '  the user at the specified testnet address <addr>. An initiation\n' +
      '  request needs only to be issued by one user, a recipient\n' +
      "  must reply to that request using the 'chat say' command,\n" +
      "  in order to authenticate the initiator's request and perform key\n" +
      '  exchange. Thereafter, a channel between the two addresses\n' +
      '  is established, and chats will remain open.\n' +
      '  NOTE: A chat secret is generated by Drop Zone for each\n' +
      '  recipient that a connection has been established with, and\n' +
      '  these secrets are stored in the ~/.dropzone/dropzone.db file.\n' +
      '  When the user responds to this request a secret is automatically\n' +
      '  generated on their computer as well.\n')
    console.log(
      '  Example:\n\n' +
      '  # Start a conversation\n' +
      '  dropzone chat new \\\n' +
      '    92UvdTpmxA6cvD6YeJZSiHW8ff8DsZXL2PHZu9Mg7JY3zbaETJw \\\n' +
      '    mqVRfjepJTxxoDgDt892tCybhmjfKCFNyp\n')
  })
  .action(command)

program.parse(process.argv)
